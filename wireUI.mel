global proc CreateWireSculpt() {
    // Declare global variables
    global string $gFilePathField;
    global string $gFeatureVertsSlider;
    global string $gAAttractionSlider;
    global string $gBAttractionSlider;
    global string $gARepulsionSlider;
    global string $gBRepulsionSlider;
    global string $gThicknessSlider;
    global string $gViewChoice;
    global string $gFOVSlider;
    global string $gContourChoice;
    global string $gContourSlider;
    global string $gExtremeMax;
    global string $gExtremeProx;
    global string $gExtremeFilter;
    
    global string $gExtremeGroupLayout;
    global string $gAbstractionCheckbox;

    // Delete the window if it already exists
    if (`window -exists wireSculptWindow`) {
        deleteUI wireSculptWindow;
    }

    // Create the window
    window -title "WireSculpt" -widthHeight 500 900 wireSculptWindow;
    
    // Create a form layout
    formLayout mainForm;
    
    // Create a column layout for the main content
    columnLayout -adjustableColumn true mainColumn;
    
    // Heading
    text -label "WireSculpt Options" -font "boldLabelFont" -align "center";

    // File Upload Section
    string $fileGroup = `frameLayout -label "3D Model Input" -collapsable false`;
    columnLayout;
    $gFilePathField = `textField -placeholderText "File path..."`;
    button -label "Load from File" -command "wireSculpt_browse_Clicked";
    setParent ..;
    setParent ..;
    
    separator -style "none" -height 10;

    // Italic Heading
    text -label "Path Construction Options" -font "obliqueLabelFont" -align "center";
    
    // Feature Attraction Weights
    string $featureGroup = `frameLayout -label "Feature Vertices (% Included)" -collapsable false`;
    columnLayout;
    $gFeatureVertsSlider = `floatSliderGrp -label "Percentage (%)" -field true -minValue 0.0 -maxValue 1.0 -value 0.2`;
    setParent ..;
    setParent ..;
    

    // Feature Attraction Weights
    string $attractionGroup = `frameLayout -label "Feature Attraction Weights" -collapsable false`;
    columnLayout;
    $gAAttractionSlider = `floatSliderGrp -label "Strength (a)" -field true -minValue 0.0 -maxValue 2.0 -value 0.5`;
    $gBAttractionSlider = `floatSliderGrp -label "Steepness (b)" -field true -minValue 0.0 -maxValue 10.0 -value 0.5`;
    setParent ..;
    setParent ..;
    
    
    
    
    // Extreme Points Parameters
    //string $extremeGroup = `frameLayout -label "Extreme Points Parameters" -collapsable false`;
    //columnLayout;
    //$gExtremeMax = `floatSliderGrp -label "Max Points Threshold" -field true -minValue 0.1 -maxValue 1.0 -value 0.85 -precision 5`;
    //$gExtremeProx = `floatSliderGrp -label "Proximity Threshold" -field true -minValue 0.001 -maxValue 0.15 -value 0.05 -precision 5`;
    //$gExtremeFilter = `floatSliderGrp -label "Filter Threshold" -field true -minValue 0.00001 -maxValue 0.05 -value 0.0005 -precision 7`;
    //setParent ..;
    //setParent ..;
    
    // Extreme Points Parameters (wrapped for visibility toggling)
    // Extreme Points Parameters (toggle the frameLayout itself)
    

    // Path Repulsion Weights
    string $repulsionGroup = `frameLayout -label "Path Repulsion Weights" -collapsable false`;
    columnLayout;
    $gARepulsionSlider = `floatSliderGrp -label "Strength (a*)" -field true -minValue 0.0 -maxValue 2.0 -value 0.5`;
    $gBRepulsionSlider = `floatSliderGrp -label "Steepness (b*)" -field true -minValue 0.0 -maxValue 10.0 -value 0.5`;
    setParent ..;
    setParent ..;
    
    // Abstraction Toggle
    string $abstractionGroup = `frameLayout -label "Abstraction (Extreme Points) Options" -collapsable false`;
    columnLayout;
    $gAbstractionCheckbox = `checkBox -label "Enable Abstraction" -value true -onCommand "toggleExtremeOptions()" -offCommand "toggleExtremeOptions()"`;
    setParent ..;
    setParent ..;
    
    string $extremeGroup = `frameLayout -label "    --> adjust extreme points parameters when Abstraction is enabled" -collapsable false -visible true extremePointsFrame`;
        columnLayout;
        $gExtremeMax = `floatSliderGrp -label "Max Points Threshold" -field true -minValue 0.1 -maxValue 1.0 -value 0.85 -precision 5`;
        $gExtremeProx = `floatSliderGrp -label "Proximity Threshold" -field true -minValue 0.001 -maxValue 0.15 -value 0.05 -precision 5`;
        $gExtremeFilter = `floatSliderGrp -label "Filter Threshold" -field true -minValue 0.00001 -maxValue 0.05 -value 0.0005 -precision 7`;
        setParent ..;
    setParent ..;
    
    separator -style "none" -height 10;

    // Italic Heading
    text -label "Wire Appearance Options" -font "obliqueLabelFont" -align "center";

    // Thickness for NURBs Curve Extrusion
    string $thicknessGroup = `frameLayout -label "NURBs Curve Thickness" -collapsable false`;
    columnLayout;
    $gThicknessSlider = `floatSliderGrp -label "Thickness" -field true -minValue 0.1 -maxValue 2.0 -value 1.0`;
    setParent ..;
    setParent ..;
    
    separator -style "none" -height 10;

    // Italic Heading
    text -label "Feature Line Options" -font "obliqueLabelFont" -align "center";
    
    // Front or Side View Checkmark
    string $viewGroup = `frameLayout -label "Front/Side View" -collapsable false`;
    columnLayout;
    $gViewChoice = `radioButtonGrp -numberOfRadioButtons 2 -label "" -labelArray2 "Front" "Side" -select 1`;
    setParent ..;
    setParent ..;
    
    // FOV
    string $fovGroup = `frameLayout -label "FOV" -collapsable false`;
    columnLayout;
    $gFOVSlider = `floatSliderGrp -label "FOV" -field true -minValue 0.1 -maxValue 1 -value 0.7`;
    setParent ..;
    setParent ..;
    
    // Suggestive Contours
    string $contoursGroup = `frameLayout -label "Suggestive Contours Options" -collapsable false`;
    columnLayout;
    $gContourChoice = `radioButtonGrp -numberOfRadioButtons 2 -label "" -labelArray2 "No SC" "Include SC" -select 2`;
    setParent ..;
    setParent ..;
    
    // Test SC
    string $testSCGroup = `rowLayout`;
    columnLayout;
    $gContourSlider = `floatSliderGrp -label "Trim SC" -field true -minValue 0 -maxValue 1 -value 0.1`;
    setParent ..;
    setParent ..;
    
    separator -style "none" -height 10;

    // Buttons
    rowLayout -numberOfColumns 3 -columnWidth3 1 100 100 -adjustableColumn 2;
        button -label "Generate Paths" -width 100 -command "wireSculpt_generate_Clicked";
        text -label ""; // Spacing
        button -label "Cancel" -width 100 -command "deleteUI wireSculptWindow";
    setParent ..;

    // Attach the column layout to the form layout
    formLayout -edit
        -attachForm mainColumn "top" 0
        -attachForm mainColumn "left" 0
        -attachForm mainColumn "right" 0
        -attachForm mainColumn "bottom" 0
        mainForm;

    // Show the window
    showWindow wireSculptWindow;
}

// Procedure for the "Browse" button
global proc wireSculpt_browse_Clicked()
{
    global string $gFilePathField;

    // Open file dialog and get the selected file path(s)
    string $filePaths[] = `fileDialog2 -fileMode 1 -caption "Open 3D Model"`;

    // Check if the user selected a file
    if (size($filePaths) > 0) {
        // Update the file path field with the first selected file
        textField -edit -text $filePaths[0] $gFilePathField;
    } else {
        // If the user canceled the dialog, clear the field
        textField -edit -text "" $gFilePathField;
    }
}

// Procedure for the "Generate" button
global proc wireSculpt_generate_Clicked()
{
    global string $gFilePathField;
    global string $gFeatureVertsSlider;
    global string $gAAttractionSlider;
    global string $gBAttractionSlider;
    global string $gARepulsionSlider;
    global string $gBRepulsionSlider;
    global string $gThicknessSlider;
    global string $gViewChoice;
    global string $gFOVSlider;
    global string $gContourChoice;
    global string $gContourSlider;
    global string $gAbstractionCheckbox;
    global string $gExtremeMax;
    global string $gExtremeProx;
    global string $gExtremeFilter;

    string $filePath = `textField -query -text $gFilePathField`;
    float $featureAmt = `floatSliderGrp -query -value $gFeatureVertsSlider`;
    float $aAttraction = `floatSliderGrp -query -value $gAAttractionSlider`;
    float $bAttraction = `floatSliderGrp -query -value $gBAttractionSlider`;
    float $aRepulsion = `floatSliderGrp -query -value $gARepulsionSlider`;
    float $bRepulsion = `floatSliderGrp -query -value $gBRepulsionSlider`;
    float $thickness = `floatSliderGrp -query -value $gThicknessSlider`;
    int $viewChoice = `radioButtonGrp -query -select $gViewChoice`;
    float $fov = `floatSliderGrp -query -value $gFOVSlider`;
    int $contourChoice = `radioButtonGrp -query -select $gContourChoice`;
    float $contour = `floatSliderGrp -query -value $gContourSlider`;
    int $abstraction = `checkBox -query -value $gAbstractionCheckbox`;
    float $extremeMax = `floatSliderGrp -query -value $gExtremeMax`;
    float $extremeProx = `floatSliderGrp -query -value $gExtremeProx`;
    float $extremeFilter = `floatSliderGrp -query -value $gExtremeFilter`;

    if (!`objExists "WireSculptNode1"`) {
        createNode transform -n WireTransform1; 
        createNode mesh -n WireShape1 -p WireTransform1; 
        sets -add initialShadingGroup WireShape1;
        createNode WireSculptNode -n WireSculptNode1;
        connectAttr WireSculptNode1.geometry WireShape1.inMesh;
        setAttr "WireShape1.displayColors" 1;
    }
    setAttr WireSculptNode1.inputMeshFile -type "string" $filePath;
    setAttr WireSculptNode1.featureVertsAmt $featureAmt;
    setAttr WireSculptNode1.rangeAttraction $aAttraction;
    setAttr WireSculptNode1.steepAttraction $bAttraction;
    setAttr WireSculptNode1.rangeRepulsion $aRepulsion;
    setAttr WireSculptNode1.steepRepulsion $bRepulsion;
    setAttr WireSculptNode1.wireThickness $thickness;
    setAttr WireSculptNode1.fov $fov;
    setAttr WireSculptNode1.view $viewChoice;
    setAttr WireSculptNode1.contour $contourChoice;
    setAttr WireSculptNode1.testSC $contour;
    setAttr WireSculptNode1.isAbstract $abstraction;
    setAttr WireSculptNode1.maxValThresh $extremeMax;
    setAttr WireSculptNode1.proximityThresh $extremeProx;
    setAttr WireSculptNode1.filterThresh $extremeFilter;
    print("Feature Verts value: " + $featureAmt + "\n");
    //print("HELLO");
}

// Procedure to set up the WireSculpt menu
global proc setupWireSculptMenu()
{
    global string $gMainWindow;

    // Create WireSculpt menu if it doesn't exist
    if (!`menu -exists wireSculptMenuUI`) {
        menu -parent $gMainWindow -label "WireSculptUI" wireSculptMenuUI;
    }
    
    // Add menu item for creating WireSculpt node
    menuItem -parent wireSculptMenuUI
         -label "Create WireSculptUI"
         -command "CreateWireSculpt()";
}
global proc toggleExtremeOptions() {
    global string $gAbstractionCheckbox;
    int $isChecked = `checkBox -q -v $gAbstractionCheckbox`;
    frameLayout -e -visible $isChecked extremePointsFrame;
}

// Call the setupWireSculptMenu procedure to create the menu
//setupWireSculptMenu();